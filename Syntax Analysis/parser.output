Grammar

    0 $accept: program "<EOF>"

    1 program: body "end" subprograms

    2 body: declarations statements

    3 declarations: declarations type vars
    4             | declarations "record" fields "endrec" vars
    5             | declarations "data" vals
    6             | %empty

    7 type: "integer"
    8     | "real"
    9     | "logical"
   10     | "character"

   11 vars: vars "," undef_variable
   12     | undef_variable

   13 undef_variable: "id" "(" dims ")"
   14               | "id"

   15 dims: dims "," dim
   16     | dim

   17 dim: "iconst"
   18    | "id"

   19 fields: fields field
   20       | field

   21 field: type vars
   22      | "record" fields "endrec" vars

   23 vals: vals "," "id" value_list
   24     | "id" value_list

   25 value_list: "/" values "/"

   26 values: values "," value
   27       | value

   28 value: repeat "*" "+ -" constant
   29      | repeat "*" constant
   30      | repeat "*" "string"
   31      | "+ -" constant
   32      | constant
   33      | "string"

   34 repeat: "iconst"
   35       | %empty

   36 constant: "iconst"
   37         | "rconst"
   38         | "lconst"
   39         | "cconst"

   40 statements: statements labeled_statement
   41           | labeled_statement

   42 labeled_statement: label statement
   43                  | statement

   44 label: "iconst"

   45 statement: simple_statement
   46          | compound_statement

   47 simple_statement: assignment
   48                 | goto_statement
   49                 | if_statement
   50                 | subroutine_call
   51                 | io_statement
   52                 | "continue"
   53                 | "return"
   54                 | "stop"

   55 assignment: variable "=" expression
   56           | variable "=" "string"

   57 variable: variable ":" "id"
   58         | variable "(" expressions ")"
   59         | "id"

   60 expressions: expressions "," expression
   61            | expression

   62 expression: expression ".or." expression
   63           | expression ".and." expression
   64           | expression ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression "+ -" expression
   66           | expression "*" expression
   67           | expression "/" expression
   68           | expression "**" expression
   69           | ".not." expression
   70           | "+ -" expression
   71           | variable
   72           | constant
   73           | "(" expression ")"

   74 goto_statement: "goto" label
   75               | "goto" "id" "," "(" labels ")"

   76 labels: labels "," label
   77       | label

   78 if_statement: "if" "(" expression ")" label "," label "," label
   79             | "if" "(" expression ")" simple_statement

   80 subroutine_call: "call" variable

   81 io_statement: "read" read_list
   82             | "write" write_list

   83 read_list: read_list "," read_item
   84          | read_item

   85 read_item: variable
   86          | "(" read_list "," "id" "=" iter_space ")"

   87 iter_space: expression "," expression step

   88 step: "," expression
   89     | %empty

   90 write_list: write_list "," write_item
   91           | write_item

   92 write_item: expression
   93           | "(" write_list "," "id" "=" iter_space ")"
   94           | "string"

   95 compound_statement: branch_statement
   96                   | loop_statement

   97 branch_statement: "if" "(" expression ")" "then" body tail

   98 tail: "else" body "endif"
   99     | "endif"

  100 loop_statement: "do" "id" "=" iter_space body "enddo"

  101 subprograms: subprograms subprogram
  102            | %empty

  103 subprogram: header body "end"

  104 header: type "function" "id" "(" formal_parameters ")"
  105       | "subroutine" "id" "(" formal_parameters ")"
  106       | "subroutine" "id"

  107 formal_parameters: type vars "," formal_parameters
  108                  | type vars


Terminals, with rules where they appear

    "<EOF>" (0) 0
    "function" (1) 104
    "subroutine" (2) 105 106
    "end" (3) 1 103
    "integer" (4) 7
    "real" (5) 8
    "logical" (6) 9
    "character" (7) 10
    "record" (8) 4 22
    "endrec" (9) 4 22
    "data" (10) 5
    "continue" (11) 52
    "goto" (12) 74 75
    "call" (13) 80
    "read" (14) 81
    "write" (15) 82
    "if" (16) 78 79 97
    "then" (17) 97
    "else" (18) 98
    "endif" (19) 98 99
    "do" (20) 100
    "enddo" (21) 100
    "stop" (22) 54
    "return" (23) 53
    "id" <string> (24) 13 14 18 23 24 57 59 75 86 93 100 104 105 106
    "iconst" <integer> (25) 17 34 36 44
    "rconst" <real> (26) 37
    "lconst" <logical> (27) 38
    "cconst" <character> (28) 39
    ".or." (29) 62
    ".and." (30) 63
    ".not." (31) 69
    ".gt. .ge. .lt. .le. .eq. .ne." (32) 64
    "+ -" (33) 28 31 65 70
    "*" (34) 28 29 30 66
    "/" (35) 25 67
    "**" (36) 68
    "string" <string> (37) 30 33 56 94
    "(" (38) 13 58 73 75 78 79 86 93 97 104 105
    ")" (39) 13 58 73 75 78 79 86 93 97 104 105
    "," (40) 11 15 23 26 60 75 76 78 83 86 87 88 90 93 107
    "=" (41) 55 56 86 93 100
    ":" (42) 57
    error (256)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program <string> (46)
        on left: 1
        on right: 0
    body <string> (47)
        on left: 2
        on right: 1 97 98 100 103
    declarations <string> (48)
        on left: 3 4 5 6
        on right: 2 3 4 5
    type <string> (49)
        on left: 7 8 9 10
        on right: 3 21 104 107 108
    vars <string> (50)
        on left: 11 12
        on right: 3 4 11 21 22 107 108
    undef_variable <string> (51)
        on left: 13 14
        on right: 11 12
    dims <string> (52)
        on left: 15 16
        on right: 13 15
    dim <string> (53)
        on left: 17 18
        on right: 15 16
    fields <string> (54)
        on left: 19 20
        on right: 4 19 22
    field <string> (55)
        on left: 21 22
        on right: 19 20
    vals <string> (56)
        on left: 23 24
        on right: 5 23
    value_list <string> (57)
        on left: 25
        on right: 23 24
    values <string> (58)
        on left: 26 27
        on right: 25 26
    value <string> (59)
        on left: 28 29 30 31 32 33
        on right: 26 27
    repeat <string> (60)
        on left: 34 35
        on right: 28 29 30
    constant <string> (61)
        on left: 36 37 38 39
        on right: 28 29 31 32 72
    statements <string> (62)
        on left: 40 41
        on right: 2 40
    labeled_statement <string> (63)
        on left: 42 43
        on right: 40 41
    label <string> (64)
        on left: 44
        on right: 42 74 76 77 78
    statement <string> (65)
        on left: 45 46
        on right: 42 43
    simple_statement <string> (66)
        on left: 47 48 49 50 51 52 53 54
        on right: 45 79
    assignment <string> (67)
        on left: 55 56
        on right: 47
    variable <string> (68)
        on left: 57 58 59
        on right: 55 56 57 58 71 80 85
    expressions <string> (69)
        on left: 60 61
        on right: 58 60
    expression <string> (70)
        on left: 62 63 64 65 66 67 68 69 70 71 72 73
        on right: 55 60 61 62 63 64 65 66 67 68 69 70 73 78 79 87 88 92 97
    goto_statement <string> (71)
        on left: 74 75
        on right: 48
    labels <string> (72)
        on left: 76 77
        on right: 75 76
    if_statement <string> (73)
        on left: 78 79
        on right: 49
    subroutine_call <string> (74)
        on left: 80
        on right: 50
    io_statement <string> (75)
        on left: 81 82
        on right: 51
    read_list <string> (76)
        on left: 83 84
        on right: 81 83 86
    read_item <string> (77)
        on left: 85 86
        on right: 83 84
    iter_space <string> (78)
        on left: 87
        on right: 86 93 100
    step <string> (79)
        on left: 88 89
        on right: 87
    write_list <string> (80)
        on left: 90 91
        on right: 82 90 93
    write_item <string> (81)
        on left: 92 93 94
        on right: 90 91
    compound_statement <string> (82)
        on left: 95 96
        on right: 46
    branch_statement <string> (83)
        on left: 97
        on right: 95
    tail <string> (84)
        on left: 98 99
        on right: 97
    loop_statement <string> (85)
        on left: 100
        on right: 96
    subprograms <string> (86)
        on left: 101 102
        on right: 1 101
    subprogram <string> (87)
        on left: 103
        on right: 101
    header <string> (88)
        on left: 104 105 106
        on right: 103
    formal_parameters <string> (89)
        on left: 107 108
        on right: 104 105 107


State 0

    0 $accept: . program "<EOF>"

    $default  reduce using rule 6 (declarations)

    program       go to state 1
    body          go to state 2
    declarations  go to state 3


State 1

    0 $accept: program . "<EOF>"

    "<EOF>"  shift, and go to state 4


State 2

    1 program: body . "end" subprograms

    "end"  shift, and go to state 5


State 3

    2 body: declarations . statements
    3 declarations: declarations . type vars
    4             | declarations . "record" fields "endrec" vars
    5             | declarations . "data" vals

    "integer"    shift, and go to state 6
    "real"       shift, and go to state 7
    "logical"    shift, and go to state 8
    "character"  shift, and go to state 9
    "record"     shift, and go to state 10
    "data"       shift, and go to state 11
    "continue"   shift, and go to state 12
    "goto"       shift, and go to state 13
    "call"       shift, and go to state 14
    "read"       shift, and go to state 15
    "write"      shift, and go to state 16
    "if"         shift, and go to state 17
    "do"         shift, and go to state 18
    "stop"       shift, and go to state 19
    "return"     shift, and go to state 20
    "id"         shift, and go to state 21
    "iconst"     shift, and go to state 22

    type                go to state 23
    statements          go to state 24
    labeled_statement   go to state 25
    label               go to state 26
    statement           go to state 27
    simple_statement    go to state 28
    assignment          go to state 29
    variable            go to state 30
    goto_statement      go to state 31
    if_statement        go to state 32
    subroutine_call     go to state 33
    io_statement        go to state 34
    compound_statement  go to state 35
    branch_statement    go to state 36
    loop_statement      go to state 37


State 4

    0 $accept: program "<EOF>" .

    $default  accept


State 5

    1 program: body "end" . subprograms

    $default  reduce using rule 102 (subprograms)

    subprograms  go to state 38


State 6

    7 type: "integer" .

    $default  reduce using rule 7 (type)


State 7

    8 type: "real" .

    $default  reduce using rule 8 (type)


State 8

    9 type: "logical" .

    $default  reduce using rule 9 (type)


State 9

   10 type: "character" .

    $default  reduce using rule 10 (type)


State 10

    4 declarations: declarations "record" . fields "endrec" vars

    "integer"    shift, and go to state 6
    "real"       shift, and go to state 7
    "logical"    shift, and go to state 8
    "character"  shift, and go to state 9
    "record"     shift, and go to state 39

    type    go to state 40
    fields  go to state 41
    field   go to state 42


State 11

    5 declarations: declarations "data" . vals

    "id"  shift, and go to state 43

    vals  go to state 44


State 12

   52 simple_statement: "continue" .

    $default  reduce using rule 52 (simple_statement)


State 13

   74 goto_statement: "goto" . label
   75               | "goto" . "id" "," "(" labels ")"

    "id"      shift, and go to state 45
    "iconst"  shift, and go to state 22

    label  go to state 46


State 14

   80 subroutine_call: "call" . variable

    "id"  shift, and go to state 21

    variable  go to state 47


State 15

   81 io_statement: "read" . read_list

    "id"  shift, and go to state 21
    "("   shift, and go to state 48

    variable   go to state 49
    read_list  go to state 50
    read_item  go to state 51


State 16

   82 io_statement: "write" . write_list

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "string"  shift, and go to state 58
    "("       shift, and go to state 59

    constant    go to state 60
    variable    go to state 61
    expression  go to state 62
    write_list  go to state 63
    write_item  go to state 64


State 17

   78 if_statement: "if" . "(" expression ")" label "," label "," label
   79             | "if" . "(" expression ")" simple_statement
   97 branch_statement: "if" . "(" expression ")" "then" body tail

    "("  shift, and go to state 65


State 18

  100 loop_statement: "do" . "id" "=" iter_space body "enddo"

    "id"  shift, and go to state 66


State 19

   54 simple_statement: "stop" .

    $default  reduce using rule 54 (simple_statement)


State 20

   53 simple_statement: "return" .

    $default  reduce using rule 53 (simple_statement)


State 21

   59 variable: "id" .

    $default  reduce using rule 59 (variable)


State 22

   44 label: "iconst" .

    $default  reduce using rule 44 (label)


State 23

    3 declarations: declarations type . vars

    "id"  shift, and go to state 67

    vars            go to state 68
    undef_variable  go to state 69


State 24

    2 body: declarations statements .
   40 statements: statements . labeled_statement

    "continue"  shift, and go to state 12
    "goto"      shift, and go to state 13
    "call"      shift, and go to state 14
    "read"      shift, and go to state 15
    "write"     shift, and go to state 16
    "if"        shift, and go to state 17
    "do"        shift, and go to state 18
    "stop"      shift, and go to state 19
    "return"    shift, and go to state 20
    "id"        shift, and go to state 21
    "iconst"    shift, and go to state 22

    $default  reduce using rule 2 (body)

    labeled_statement   go to state 70
    label               go to state 26
    statement           go to state 27
    simple_statement    go to state 28
    assignment          go to state 29
    variable            go to state 30
    goto_statement      go to state 31
    if_statement        go to state 32
    subroutine_call     go to state 33
    io_statement        go to state 34
    compound_statement  go to state 35
    branch_statement    go to state 36
    loop_statement      go to state 37


State 25

   41 statements: labeled_statement .

    $default  reduce using rule 41 (statements)


State 26

   42 labeled_statement: label . statement

    "continue"  shift, and go to state 12
    "goto"      shift, and go to state 13
    "call"      shift, and go to state 14
    "read"      shift, and go to state 15
    "write"     shift, and go to state 16
    "if"        shift, and go to state 17
    "do"        shift, and go to state 18
    "stop"      shift, and go to state 19
    "return"    shift, and go to state 20
    "id"        shift, and go to state 21

    statement           go to state 71
    simple_statement    go to state 28
    assignment          go to state 29
    variable            go to state 30
    goto_statement      go to state 31
    if_statement        go to state 32
    subroutine_call     go to state 33
    io_statement        go to state 34
    compound_statement  go to state 35
    branch_statement    go to state 36
    loop_statement      go to state 37


State 27

   43 labeled_statement: statement .

    $default  reduce using rule 43 (labeled_statement)


State 28

   45 statement: simple_statement .

    $default  reduce using rule 45 (statement)


State 29

   47 simple_statement: assignment .

    $default  reduce using rule 47 (simple_statement)


State 30

   55 assignment: variable . "=" expression
   56           | variable . "=" "string"
   57 variable: variable . ":" "id"
   58         | variable . "(" expressions ")"

    "("  shift, and go to state 72
    "="  shift, and go to state 73
    ":"  shift, and go to state 74


State 31

   48 simple_statement: goto_statement .

    $default  reduce using rule 48 (simple_statement)


State 32

   49 simple_statement: if_statement .

    $default  reduce using rule 49 (simple_statement)


State 33

   50 simple_statement: subroutine_call .

    $default  reduce using rule 50 (simple_statement)


State 34

   51 simple_statement: io_statement .

    $default  reduce using rule 51 (simple_statement)


State 35

   46 statement: compound_statement .

    $default  reduce using rule 46 (statement)


State 36

   95 compound_statement: branch_statement .

    $default  reduce using rule 95 (compound_statement)


State 37

   96 compound_statement: loop_statement .

    $default  reduce using rule 96 (compound_statement)


State 38

    1 program: body "end" subprograms .
  101 subprograms: subprograms . subprogram

    "subroutine"  shift, and go to state 75
    "integer"     shift, and go to state 6
    "real"        shift, and go to state 7
    "logical"     shift, and go to state 8
    "character"   shift, and go to state 9

    $default  reduce using rule 1 (program)

    type        go to state 76
    subprogram  go to state 77
    header      go to state 78


State 39

   22 field: "record" . fields "endrec" vars

    "integer"    shift, and go to state 6
    "real"       shift, and go to state 7
    "logical"    shift, and go to state 8
    "character"  shift, and go to state 9
    "record"     shift, and go to state 39

    type    go to state 40
    fields  go to state 79
    field   go to state 42


State 40

   21 field: type . vars

    "id"  shift, and go to state 67

    vars            go to state 80
    undef_variable  go to state 69


State 41

    4 declarations: declarations "record" fields . "endrec" vars
   19 fields: fields . field

    "integer"    shift, and go to state 6
    "real"       shift, and go to state 7
    "logical"    shift, and go to state 8
    "character"  shift, and go to state 9
    "record"     shift, and go to state 39
    "endrec"     shift, and go to state 81

    type   go to state 40
    field  go to state 82


State 42

   20 fields: field .

    $default  reduce using rule 20 (fields)


State 43

   24 vals: "id" . value_list

    "/"  shift, and go to state 83

    value_list  go to state 84


State 44

    5 declarations: declarations "data" vals .
   23 vals: vals . "," "id" value_list

    ","  shift, and go to state 85

    $default  reduce using rule 5 (declarations)


State 45

   75 goto_statement: "goto" "id" . "," "(" labels ")"

    ","  shift, and go to state 86


State 46

   74 goto_statement: "goto" label .

    $default  reduce using rule 74 (goto_statement)


State 47

   57 variable: variable . ":" "id"
   58         | variable . "(" expressions ")"
   80 subroutine_call: "call" variable .

    "("  shift, and go to state 72
    ":"  shift, and go to state 74

    $default  reduce using rule 80 (subroutine_call)


State 48

   86 read_item: "(" . read_list "," "id" "=" iter_space ")"

    "id"  shift, and go to state 21
    "("   shift, and go to state 48

    variable   go to state 49
    read_list  go to state 87
    read_item  go to state 51


State 49

   57 variable: variable . ":" "id"
   58         | variable . "(" expressions ")"
   85 read_item: variable .

    "("  shift, and go to state 72
    ":"  shift, and go to state 74

    $default  reduce using rule 85 (read_item)


State 50

   81 io_statement: "read" read_list .
   83 read_list: read_list . "," read_item

    ","  shift, and go to state 88

    $default  reduce using rule 81 (io_statement)


State 51

   84 read_list: read_item .

    $default  reduce using rule 84 (read_list)


State 52

   36 constant: "iconst" .

    $default  reduce using rule 36 (constant)


State 53

   37 constant: "rconst" .

    $default  reduce using rule 37 (constant)


State 54

   38 constant: "lconst" .

    $default  reduce using rule 38 (constant)


State 55

   39 constant: "cconst" .

    $default  reduce using rule 39 (constant)


State 56

   69 expression: ".not." . expression

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 90


State 57

   70 expression: "+ -" . expression

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 91


State 58

   94 write_item: "string" .

    $default  reduce using rule 94 (write_item)


State 59

   73 expression: "(" . expression ")"
   93 write_item: "(" . write_list "," "id" "=" iter_space ")"

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "string"  shift, and go to state 58
    "("       shift, and go to state 59

    constant    go to state 60
    variable    go to state 61
    expression  go to state 92
    write_list  go to state 93
    write_item  go to state 64


State 60

   72 expression: constant .

    $default  reduce using rule 72 (expression)


State 61

   57 variable: variable . ":" "id"
   58         | variable . "(" expressions ")"
   71 expression: variable .

    "("  shift, and go to state 72
    ":"  shift, and go to state 74

    $default  reduce using rule 71 (expression)


State 62

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression
   92 write_item: expression .

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "+ -"                            shift, and go to state 97
    "*"                              shift, and go to state 98
    "/"                              shift, and go to state 99
    "**"                             shift, and go to state 100

    $default  reduce using rule 92 (write_item)


State 63

   82 io_statement: "write" write_list .
   90 write_list: write_list . "," write_item

    ","  shift, and go to state 101

    $default  reduce using rule 82 (io_statement)


State 64

   91 write_list: write_item .

    $default  reduce using rule 91 (write_list)


State 65

   78 if_statement: "if" "(" . expression ")" label "," label "," label
   79             | "if" "(" . expression ")" simple_statement
   97 branch_statement: "if" "(" . expression ")" "then" body tail

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 102


State 66

  100 loop_statement: "do" "id" . "=" iter_space body "enddo"

    "="  shift, and go to state 103


State 67

   13 undef_variable: "id" . "(" dims ")"
   14               | "id" .

    "("  shift, and go to state 104

    $default  reduce using rule 14 (undef_variable)


State 68

    3 declarations: declarations type vars .
   11 vars: vars . "," undef_variable

    ","  shift, and go to state 105

    $default  reduce using rule 3 (declarations)


State 69

   12 vars: undef_variable .

    $default  reduce using rule 12 (vars)


State 70

   40 statements: statements labeled_statement .

    $default  reduce using rule 40 (statements)


State 71

   42 labeled_statement: label statement .

    $default  reduce using rule 42 (labeled_statement)


State 72

   58 variable: variable "(" . expressions ")"

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant     go to state 60
    variable     go to state 61
    expressions  go to state 106
    expression   go to state 107


State 73

   55 assignment: variable "=" . expression
   56           | variable "=" . "string"

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "string"  shift, and go to state 108
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 109


State 74

   57 variable: variable ":" . "id"

    "id"  shift, and go to state 110


State 75

  105 header: "subroutine" . "id" "(" formal_parameters ")"
  106       | "subroutine" . "id"

    "id"  shift, and go to state 111


State 76

  104 header: type . "function" "id" "(" formal_parameters ")"

    "function"  shift, and go to state 112


State 77

  101 subprograms: subprograms subprogram .

    $default  reduce using rule 101 (subprograms)


State 78

  103 subprogram: header . body "end"

    $default  reduce using rule 6 (declarations)

    body          go to state 113
    declarations  go to state 3


State 79

   19 fields: fields . field
   22 field: "record" fields . "endrec" vars

    "integer"    shift, and go to state 6
    "real"       shift, and go to state 7
    "logical"    shift, and go to state 8
    "character"  shift, and go to state 9
    "record"     shift, and go to state 39
    "endrec"     shift, and go to state 114

    type   go to state 40
    field  go to state 82


State 80

   11 vars: vars . "," undef_variable
   21 field: type vars .

    ","  shift, and go to state 105

    $default  reduce using rule 21 (field)


State 81

    4 declarations: declarations "record" fields "endrec" . vars

    "id"  shift, and go to state 67

    vars            go to state 115
    undef_variable  go to state 69


State 82

   19 fields: fields field .

    $default  reduce using rule 19 (fields)


State 83

   25 value_list: "/" . values "/"

    "iconst"  shift, and go to state 116
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    "+ -"     shift, and go to state 117
    "string"  shift, and go to state 118

    $default  reduce using rule 35 (repeat)

    values    go to state 119
    value     go to state 120
    repeat    go to state 121
    constant  go to state 122


State 84

   24 vals: "id" value_list .

    $default  reduce using rule 24 (vals)


State 85

   23 vals: vals "," . "id" value_list

    "id"  shift, and go to state 123


State 86

   75 goto_statement: "goto" "id" "," . "(" labels ")"

    "("  shift, and go to state 124


State 87

   83 read_list: read_list . "," read_item
   86 read_item: "(" read_list . "," "id" "=" iter_space ")"

    ","  shift, and go to state 125


State 88

   83 read_list: read_list "," . read_item

    "id"  shift, and go to state 21
    "("   shift, and go to state 48

    variable   go to state 49
    read_item  go to state 126


State 89

   73 expression: "(" . expression ")"

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 127


State 90

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression
   69           | ".not." expression .

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "**"                             shift, and go to state 100

    $default  reduce using rule 69 (expression)


State 91

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression
   70           | "+ -" expression .

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "**"                             shift, and go to state 100

    $default  reduce using rule 70 (expression)


State 92

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression
   73           | "(" expression . ")"
   92 write_item: expression .

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "+ -"                            shift, and go to state 97
    "*"                              shift, and go to state 98
    "/"                              shift, and go to state 99
    "**"                             shift, and go to state 100
    ")"                              shift, and go to state 128

    $default  reduce using rule 92 (write_item)


State 93

   90 write_list: write_list . "," write_item
   93 write_item: "(" write_list . "," "id" "=" iter_space ")"

    ","  shift, and go to state 129


State 94

   62 expression: expression ".or." . expression

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 130


State 95

   63 expression: expression ".and." . expression

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 131


State 96

   64 expression: expression ".gt. .ge. .lt. .le. .eq. .ne." . expression

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 132


State 97

   65 expression: expression "+ -" . expression

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 133


State 98

   66 expression: expression "*" . expression

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 134


State 99

   67 expression: expression "/" . expression

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 135


State 100

   68 expression: expression "**" . expression

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 136


State 101

   90 write_list: write_list "," . write_item

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "string"  shift, and go to state 58
    "("       shift, and go to state 59

    constant    go to state 60
    variable    go to state 61
    expression  go to state 62
    write_item  go to state 137


State 102

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression
   78 if_statement: "if" "(" expression . ")" label "," label "," label
   79             | "if" "(" expression . ")" simple_statement
   97 branch_statement: "if" "(" expression . ")" "then" body tail

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "+ -"                            shift, and go to state 97
    "*"                              shift, and go to state 98
    "/"                              shift, and go to state 99
    "**"                             shift, and go to state 100
    ")"                              shift, and go to state 138


State 103

  100 loop_statement: "do" "id" "=" . iter_space body "enddo"

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 139
    iter_space  go to state 140


State 104

   13 undef_variable: "id" "(" . dims ")"

    "id"      shift, and go to state 141
    "iconst"  shift, and go to state 142

    dims  go to state 143
    dim   go to state 144


State 105

   11 vars: vars "," . undef_variable

    "id"  shift, and go to state 67

    undef_variable  go to state 145


State 106

   58 variable: variable "(" expressions . ")"
   60 expressions: expressions . "," expression

    ")"  shift, and go to state 146
    ","  shift, and go to state 147


State 107

   61 expressions: expression .
   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "+ -"                            shift, and go to state 97
    "*"                              shift, and go to state 98
    "/"                              shift, and go to state 99
    "**"                             shift, and go to state 100

    $default  reduce using rule 61 (expressions)


State 108

   56 assignment: variable "=" "string" .

    $default  reduce using rule 56 (assignment)


State 109

   55 assignment: variable "=" expression .
   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "+ -"                            shift, and go to state 97
    "*"                              shift, and go to state 98
    "/"                              shift, and go to state 99
    "**"                             shift, and go to state 100

    $default  reduce using rule 55 (assignment)


State 110

   57 variable: variable ":" "id" .

    $default  reduce using rule 57 (variable)


State 111

  105 header: "subroutine" "id" . "(" formal_parameters ")"
  106       | "subroutine" "id" .

    "("  shift, and go to state 148

    $default  reduce using rule 106 (header)


State 112

  104 header: type "function" . "id" "(" formal_parameters ")"

    "id"  shift, and go to state 149


State 113

  103 subprogram: header body . "end"

    "end"  shift, and go to state 150


State 114

   22 field: "record" fields "endrec" . vars

    "id"  shift, and go to state 67

    vars            go to state 151
    undef_variable  go to state 69


State 115

    4 declarations: declarations "record" fields "endrec" vars .
   11 vars: vars . "," undef_variable

    ","  shift, and go to state 105

    $default  reduce using rule 4 (declarations)


State 116

   34 repeat: "iconst" .
   36 constant: "iconst" .

    "*"       reduce using rule 34 (repeat)
    $default  reduce using rule 36 (constant)


State 117

   31 value: "+ -" . constant

    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55

    constant  go to state 152


State 118

   33 value: "string" .

    $default  reduce using rule 33 (value)


State 119

   25 value_list: "/" values . "/"
   26 values: values . "," value

    "/"  shift, and go to state 153
    ","  shift, and go to state 154


State 120

   27 values: value .

    $default  reduce using rule 27 (values)


State 121

   28 value: repeat . "*" "+ -" constant
   29      | repeat . "*" constant
   30      | repeat . "*" "string"

    "*"  shift, and go to state 155


State 122

   32 value: constant .

    $default  reduce using rule 32 (value)


State 123

   23 vals: vals "," "id" . value_list

    "/"  shift, and go to state 83

    value_list  go to state 156


State 124

   75 goto_statement: "goto" "id" "," "(" . labels ")"

    "iconst"  shift, and go to state 22

    label   go to state 157
    labels  go to state 158


State 125

   83 read_list: read_list "," . read_item
   86 read_item: "(" read_list "," . "id" "=" iter_space ")"

    "id"  shift, and go to state 159
    "("   shift, and go to state 48

    variable   go to state 49
    read_item  go to state 126


State 126

   83 read_list: read_list "," read_item .

    $default  reduce using rule 83 (read_list)


State 127

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression
   73           | "(" expression . ")"

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "+ -"                            shift, and go to state 97
    "*"                              shift, and go to state 98
    "/"                              shift, and go to state 99
    "**"                             shift, and go to state 100
    ")"                              shift, and go to state 128


State 128

   73 expression: "(" expression ")" .

    $default  reduce using rule 73 (expression)


State 129

   90 write_list: write_list "," . write_item
   93 write_item: "(" write_list "," . "id" "=" iter_space ")"

    "id"      shift, and go to state 160
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "string"  shift, and go to state 58
    "("       shift, and go to state 59

    constant    go to state 60
    variable    go to state 61
    expression  go to state 62
    write_item  go to state 137


State 130

   62 expression: expression . ".or." expression
   62           | expression ".or." expression .
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression

    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "**"                             shift, and go to state 100

    $default  reduce using rule 62 (expression)


State 131

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   63           | expression ".and." expression .
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression

    ".or."                           shift, and go to state 94
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "**"                             shift, and go to state 100

    $default  reduce using rule 63 (expression)


State 132

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   64           | expression ".gt. .ge. .lt. .le. .eq. .ne." expression .
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression

    ".gt. .ge. .lt. .le. .eq. .ne."  error (nonassociative)

    $default  reduce using rule 64 (expression)


State 133

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   65           | expression "+ -" expression .
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "**"                             shift, and go to state 100

    $default  reduce using rule 65 (expression)


State 134

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   66           | expression "*" expression .
   67           | expression . "/" expression
   68           | expression . "**" expression

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "+ -"                            shift, and go to state 97
    "**"                             shift, and go to state 100

    $default  reduce using rule 66 (expression)


State 135

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   67           | expression "/" expression .
   68           | expression . "**" expression

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "+ -"                            shift, and go to state 97
    "**"                             shift, and go to state 100

    $default  reduce using rule 67 (expression)


State 136

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression
   68           | expression "**" expression .

    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "**"                             shift, and go to state 100

    $default  reduce using rule 68 (expression)


State 137

   90 write_list: write_list "," write_item .

    $default  reduce using rule 90 (write_list)


State 138

   78 if_statement: "if" "(" expression ")" . label "," label "," label
   79             | "if" "(" expression ")" . simple_statement
   97 branch_statement: "if" "(" expression ")" . "then" body tail

    "continue"  shift, and go to state 12
    "goto"      shift, and go to state 13
    "call"      shift, and go to state 14
    "read"      shift, and go to state 15
    "write"     shift, and go to state 16
    "if"        shift, and go to state 161
    "then"      shift, and go to state 162
    "stop"      shift, and go to state 19
    "return"    shift, and go to state 20
    "id"        shift, and go to state 21
    "iconst"    shift, and go to state 22

    label             go to state 163
    simple_statement  go to state 164
    assignment        go to state 29
    variable          go to state 30
    goto_statement    go to state 31
    if_statement      go to state 32
    subroutine_call   go to state 33
    io_statement      go to state 34


State 139

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression
   87 iter_space: expression . "," expression step

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "+ -"                            shift, and go to state 97
    "*"                              shift, and go to state 98
    "/"                              shift, and go to state 99
    "**"                             shift, and go to state 100
    ","                              shift, and go to state 165


State 140

  100 loop_statement: "do" "id" "=" iter_space . body "enddo"

    $default  reduce using rule 6 (declarations)

    body          go to state 166
    declarations  go to state 3


State 141

   18 dim: "id" .

    $default  reduce using rule 18 (dim)


State 142

   17 dim: "iconst" .

    $default  reduce using rule 17 (dim)


State 143

   13 undef_variable: "id" "(" dims . ")"
   15 dims: dims . "," dim

    ")"  shift, and go to state 167
    ","  shift, and go to state 168


State 144

   16 dims: dim .

    $default  reduce using rule 16 (dims)


State 145

   11 vars: vars "," undef_variable .

    $default  reduce using rule 11 (vars)


State 146

   58 variable: variable "(" expressions ")" .

    $default  reduce using rule 58 (variable)


State 147

   60 expressions: expressions "," . expression

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 169


State 148

  105 header: "subroutine" "id" "(" . formal_parameters ")"

    "integer"    shift, and go to state 6
    "real"       shift, and go to state 7
    "logical"    shift, and go to state 8
    "character"  shift, and go to state 9

    type               go to state 170
    formal_parameters  go to state 171


State 149

  104 header: type "function" "id" . "(" formal_parameters ")"

    "("  shift, and go to state 172


State 150

  103 subprogram: header body "end" .

    $default  reduce using rule 103 (subprogram)


State 151

   11 vars: vars . "," undef_variable
   22 field: "record" fields "endrec" vars .

    ","  shift, and go to state 105

    $default  reduce using rule 22 (field)


State 152

   31 value: "+ -" constant .

    $default  reduce using rule 31 (value)


State 153

   25 value_list: "/" values "/" .

    $default  reduce using rule 25 (value_list)


State 154

   26 values: values "," . value

    "iconst"  shift, and go to state 116
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    "+ -"     shift, and go to state 117
    "string"  shift, and go to state 118

    $default  reduce using rule 35 (repeat)

    value     go to state 173
    repeat    go to state 121
    constant  go to state 122


State 155

   28 value: repeat "*" . "+ -" constant
   29      | repeat "*" . constant
   30      | repeat "*" . "string"

    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    "+ -"     shift, and go to state 174
    "string"  shift, and go to state 175

    constant  go to state 176


State 156

   23 vals: vals "," "id" value_list .

    $default  reduce using rule 23 (vals)


State 157

   77 labels: label .

    $default  reduce using rule 77 (labels)


State 158

   75 goto_statement: "goto" "id" "," "(" labels . ")"
   76 labels: labels . "," label

    ")"  shift, and go to state 177
    ","  shift, and go to state 178


State 159

   59 variable: "id" .
   86 read_item: "(" read_list "," "id" . "=" iter_space ")"

    "="  shift, and go to state 179

    $default  reduce using rule 59 (variable)


State 160

   59 variable: "id" .
   93 write_item: "(" write_list "," "id" . "=" iter_space ")"

    "="  shift, and go to state 180

    $default  reduce using rule 59 (variable)


State 161

   78 if_statement: "if" . "(" expression ")" label "," label "," label
   79             | "if" . "(" expression ")" simple_statement

    "("  shift, and go to state 181


State 162

   97 branch_statement: "if" "(" expression ")" "then" . body tail

    $default  reduce using rule 6 (declarations)

    body          go to state 182
    declarations  go to state 3


State 163

   78 if_statement: "if" "(" expression ")" label . "," label "," label

    ","  shift, and go to state 183


State 164

   79 if_statement: "if" "(" expression ")" simple_statement .

    $default  reduce using rule 79 (if_statement)


State 165

   87 iter_space: expression "," . expression step

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 184


State 166

  100 loop_statement: "do" "id" "=" iter_space body . "enddo"

    "enddo"  shift, and go to state 185


State 167

   13 undef_variable: "id" "(" dims ")" .

    $default  reduce using rule 13 (undef_variable)


State 168

   15 dims: dims "," . dim

    "id"      shift, and go to state 141
    "iconst"  shift, and go to state 142

    dim  go to state 186


State 169

   60 expressions: expressions "," expression .
   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "+ -"                            shift, and go to state 97
    "*"                              shift, and go to state 98
    "/"                              shift, and go to state 99
    "**"                             shift, and go to state 100

    $default  reduce using rule 60 (expressions)


State 170

  107 formal_parameters: type . vars "," formal_parameters
  108                  | type . vars

    "id"  shift, and go to state 67

    vars            go to state 187
    undef_variable  go to state 69


State 171

  105 header: "subroutine" "id" "(" formal_parameters . ")"

    ")"  shift, and go to state 188


State 172

  104 header: type "function" "id" "(" . formal_parameters ")"

    "integer"    shift, and go to state 6
    "real"       shift, and go to state 7
    "logical"    shift, and go to state 8
    "character"  shift, and go to state 9

    type               go to state 170
    formal_parameters  go to state 189


State 173

   26 values: values "," value .

    $default  reduce using rule 26 (values)


State 174

   28 value: repeat "*" "+ -" . constant

    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55

    constant  go to state 190


State 175

   30 value: repeat "*" "string" .

    $default  reduce using rule 30 (value)


State 176

   29 value: repeat "*" constant .

    $default  reduce using rule 29 (value)


State 177

   75 goto_statement: "goto" "id" "," "(" labels ")" .

    $default  reduce using rule 75 (goto_statement)


State 178

   76 labels: labels "," . label

    "iconst"  shift, and go to state 22

    label  go to state 191


State 179

   86 read_item: "(" read_list "," "id" "=" . iter_space ")"

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 139
    iter_space  go to state 192


State 180

   93 write_item: "(" write_list "," "id" "=" . iter_space ")"

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 139
    iter_space  go to state 193


State 181

   78 if_statement: "if" "(" . expression ")" label "," label "," label
   79             | "if" "(" . expression ")" simple_statement

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 194


State 182

   97 branch_statement: "if" "(" expression ")" "then" body . tail

    "else"   shift, and go to state 195
    "endif"  shift, and go to state 196

    tail  go to state 197


State 183

   78 if_statement: "if" "(" expression ")" label "," . label "," label

    "iconst"  shift, and go to state 22

    label  go to state 198


State 184

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression
   87 iter_space: expression "," expression . step

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "+ -"                            shift, and go to state 97
    "*"                              shift, and go to state 98
    "/"                              shift, and go to state 99
    "**"                             shift, and go to state 100
    ","                              shift, and go to state 199

    $default  reduce using rule 89 (step)

    step  go to state 200


State 185

  100 loop_statement: "do" "id" "=" iter_space body "enddo" .

    $default  reduce using rule 100 (loop_statement)


State 186

   15 dims: dims "," dim .

    $default  reduce using rule 15 (dims)


State 187

   11 vars: vars . "," undef_variable
  107 formal_parameters: type vars . "," formal_parameters
  108                  | type vars .

    ","  shift, and go to state 201

    $default  reduce using rule 108 (formal_parameters)


State 188

  105 header: "subroutine" "id" "(" formal_parameters ")" .

    $default  reduce using rule 105 (header)


State 189

  104 header: type "function" "id" "(" formal_parameters . ")"

    ")"  shift, and go to state 202


State 190

   28 value: repeat "*" "+ -" constant .

    $default  reduce using rule 28 (value)


State 191

   76 labels: labels "," label .

    $default  reduce using rule 76 (labels)


State 192

   86 read_item: "(" read_list "," "id" "=" iter_space . ")"

    ")"  shift, and go to state 203


State 193

   93 write_item: "(" write_list "," "id" "=" iter_space . ")"

    ")"  shift, and go to state 204


State 194

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression
   78 if_statement: "if" "(" expression . ")" label "," label "," label
   79             | "if" "(" expression . ")" simple_statement

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "+ -"                            shift, and go to state 97
    "*"                              shift, and go to state 98
    "/"                              shift, and go to state 99
    "**"                             shift, and go to state 100
    ")"                              shift, and go to state 205


State 195

   98 tail: "else" . body "endif"

    $default  reduce using rule 6 (declarations)

    body          go to state 206
    declarations  go to state 3


State 196

   99 tail: "endif" .

    $default  reduce using rule 99 (tail)


State 197

   97 branch_statement: "if" "(" expression ")" "then" body tail .

    $default  reduce using rule 97 (branch_statement)


State 198

   78 if_statement: "if" "(" expression ")" label "," label . "," label

    ","  shift, and go to state 207


State 199

   88 step: "," . expression

    "id"      shift, and go to state 21
    "iconst"  shift, and go to state 52
    "rconst"  shift, and go to state 53
    "lconst"  shift, and go to state 54
    "cconst"  shift, and go to state 55
    ".not."   shift, and go to state 56
    "+ -"     shift, and go to state 57
    "("       shift, and go to state 89

    constant    go to state 60
    variable    go to state 61
    expression  go to state 208


State 200

   87 iter_space: expression "," expression step .

    $default  reduce using rule 87 (iter_space)


State 201

   11 vars: vars "," . undef_variable
  107 formal_parameters: type vars "," . formal_parameters

    "integer"    shift, and go to state 6
    "real"       shift, and go to state 7
    "logical"    shift, and go to state 8
    "character"  shift, and go to state 9
    "id"         shift, and go to state 67

    type               go to state 170
    undef_variable     go to state 145
    formal_parameters  go to state 209


State 202

  104 header: type "function" "id" "(" formal_parameters ")" .

    $default  reduce using rule 104 (header)


State 203

   86 read_item: "(" read_list "," "id" "=" iter_space ")" .

    $default  reduce using rule 86 (read_item)


State 204

   93 write_item: "(" write_list "," "id" "=" iter_space ")" .

    $default  reduce using rule 93 (write_item)


State 205

   78 if_statement: "if" "(" expression ")" . label "," label "," label
   79             | "if" "(" expression ")" . simple_statement

    "continue"  shift, and go to state 12
    "goto"      shift, and go to state 13
    "call"      shift, and go to state 14
    "read"      shift, and go to state 15
    "write"     shift, and go to state 16
    "if"        shift, and go to state 161
    "stop"      shift, and go to state 19
    "return"    shift, and go to state 20
    "id"        shift, and go to state 21
    "iconst"    shift, and go to state 22

    label             go to state 163
    simple_statement  go to state 164
    assignment        go to state 29
    variable          go to state 30
    goto_statement    go to state 31
    if_statement      go to state 32
    subroutine_call   go to state 33
    io_statement      go to state 34


State 206

   98 tail: "else" body . "endif"

    "endif"  shift, and go to state 210


State 207

   78 if_statement: "if" "(" expression ")" label "," label "," . label

    "iconst"  shift, and go to state 22

    label  go to state 211


State 208

   62 expression: expression . ".or." expression
   63           | expression . ".and." expression
   64           | expression . ".gt. .ge. .lt. .le. .eq. .ne." expression
   65           | expression . "+ -" expression
   66           | expression . "*" expression
   67           | expression . "/" expression
   68           | expression . "**" expression
   88 step: "," expression .

    ".or."                           shift, and go to state 94
    ".and."                          shift, and go to state 95
    ".gt. .ge. .lt. .le. .eq. .ne."  shift, and go to state 96
    "+ -"                            shift, and go to state 97
    "*"                              shift, and go to state 98
    "/"                              shift, and go to state 99
    "**"                             shift, and go to state 100

    $default  reduce using rule 88 (step)


State 209

  107 formal_parameters: type vars "," formal_parameters .

    $default  reduce using rule 107 (formal_parameters)


State 210

   98 tail: "else" body "endif" .

    $default  reduce using rule 98 (tail)


State 211

   78 if_statement: "if" "(" expression ")" label "," label "," label .

    $default  reduce using rule 78 (if_statement)
